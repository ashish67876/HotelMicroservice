apiVersion: apps/v1
kind: Deployment
metadata:
  name: eurekaserver-deployment
  namespace: default
  labels:
    app: eurekaserver
spec:
  selector:
    matchLabels:
      app: eurekaserver
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: eurekaserver
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      containers:
      - name: eurekaserver
        image: jinsa05/eurekaserver:v4
        resources:
          requests:
            cpu: 200m
            memory: 500Mi
          limits:
            cpu: 1000m
            memory: 1024Mi
        ports:
        - containerPort: 8070
        env:
        - name: SPRING_APPLICATION_NAME
          valueFrom:
            configMapKeyRef:
              name: calling-configmap
              key: EUREKA_APPLICATION_NAME
        - name: SPRING_CONFIG_IMPORT
          valueFrom:
            configMapKeyRef:
              name: calling-configmap
              key: SPRING_CONFIG_IMPORT
---
apiVersion: v1
kind: Service
metadata:
  name: eurekaserver
  namespace: default
spec:
  selector:
    app: eurekaserver
  type: LoadBalancer
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: eurekaserver
    protocol: TCP
    port: 8070
    targetPort: 8070
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.

